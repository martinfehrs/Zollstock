target_sources(tests PRIVATE si_prefix_tests.cpp)
target_sources(tests PRIVATE length_unit_type_tests.cpp)
target_sources(tests PRIVATE length_unit_constant_tests.cpp)
target_sources(tests PRIVATE length_unit_literal_tests.cpp)
target_sources(tests PRIVATE time_unit_type_tests.cpp)
target_sources(tests PRIVATE time_unit_constant_tests.cpp)
target_sources(tests PRIVATE time_unit_literal_tests.cpp)
target_sources(tests PRIVATE area_unit_constant_tests.cpp)
target_sources(tests PRIVATE area_unit_literal_tests.cpp)
target_sources(tests PRIVATE volume_unit_constant_tests.cpp)
target_sources(tests PRIVATE volume_unit_literal_tests.cpp)
target_sources(tests PRIVATE angle_unit_type_tests.cpp)
target_sources(tests PRIVATE angle_unit_constant_tests.cpp)
target_sources(tests PRIVATE angle_unit_literal_tests.cpp)
target_sources(tests PRIVATE dimensionless_unit_type_tests.cpp)
target_sources(tests PRIVATE dimensionless_unit_constant_tests.cpp)
target_sources(tests PRIVATE dimensionless_unit_literal_tests.cpp)
target_sources(tests PRIVATE squared_time_unit_constant_tests.cpp)
target_sources(tests PRIVATE velocity_unit_constant_tests.cpp)
target_sources(tests PRIVATE acceleration_unit_constant_tests.cpp)
target_sources(tests PRIVATE angular_velocity_unit_constant_tests.cpp)

target_sources(tests PRIVATE quantity_tests.cpp)

if (MSVC)
    set_target_properties(tests PROPERTIES LINK_FLAGS /STACK:"10000000" /BIGOBJ)
endif(MSVC)
